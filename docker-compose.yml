version: "3.9"

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: srs_backend
    restart: always
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:4000"
    environment:
      NODE_ENV: ${NODE_ENV}
    command: >
      sh -c "if [ '$$NODE_ENV' = 'production' ];
             then node dist/main.js;
             else npm run start:dev;
             fi"
    depends_on:
      - db
    networks:
      - srs_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: srs_frontend
    restart: always
    env_file:
      - .env
    ports:
      - "${FRONTEND_PORT}:80"
    environment:
      NODE_ENV: ${NODE_ENV}
    command: >
      sh -c "if [ '$$NODE_ENV' = 'production' ];
             then nginx -g 'daemon off;';
             else npm run dev;
             fi"
    depends_on:
      - backend
    networks:
      - srs_network

  db:
    image: postgres:15
    container_name: srs_postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - srs_network

networks:
  srs_network:
    driver: bridge

volumes:
  pgdata:
